{"version":3,"sources":["components/Note.js","components/Notify.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notify","message","baseUrl","axios","get","then","response","data","newObject","post","id","request","put","console","log","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","useEffect","noteServices","initialNote","notesToShow","filter","map","i","find","changeNote","returnedNote","catch","err","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","concat","value","onChange","e","target","type","ReacrDOM","render","document","getElementById"],"mappings":"gLAeeA,EAbF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBACXC,EAAQF,EAAKG,UACb,mBACA,iBAEN,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCEjCK,EAZA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACb,OAAgB,OAAZA,EACO,KAIP,qBAAKJ,UAAU,QAAf,SACKI,K,gBCNPC,EAAU,aAkBD,EAhBA,WAEb,OADiBC,IAAMC,IAAIF,GACZG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc5B,EAXA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS5B,EANA,SAACG,EAAIF,GAClB,IAAMG,EAAWR,IAAMS,IAAN,UAAaV,EAAb,YAAwBQ,GAAMF,GAE/C,OADAK,QAAQC,IAAIH,GACLA,EAAQN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCgF1BQ,G,MAzFL,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,UAOhBC,qBAAU,WACNC,IAEGpB,MAAM,SAAAqB,GACHR,EAASQ,QAEhB,IAKH,IAuCMC,EAAcN,EACZJ,EACAA,EAAMW,QAAO,SAAAnC,GAAI,OAAuB,IAAnBA,EAAKG,aAElC,OACE,gCACE,uCACA,cAAC,EAAD,CAAQK,QAASsB,IACjB,yBAAQxB,QAAS,kBAAMuB,GAAYD,IAAnC,kBACQA,EAAU,YAAa,SAG/B,6BACGM,EAAYE,KAAI,SAACpC,EAAMqC,GAAP,OACf,cAAC,EAAD,CAEIrC,KAAMA,EACNC,iBAAkB,kBArCL,SAAAgB,GACvB,IAAMjB,EAAOwB,EAAMc,MAAK,SAAAtC,GAAI,OAAIA,EAAKiB,KAAMA,KACrCsB,EAAU,2BAAOvC,GAAP,IAAaG,WAAYH,EAAKG,YAG9C6B,EACYf,EAAIsB,GACX3B,MAAM,SAAA4B,GACLpB,QAAQC,IAAI,WACZI,EAASD,EAAMY,KAAI,SAAApC,GAAI,OAAIA,EAAKiB,KAAOA,EAAKjB,EAAOwC,SAEpDC,OAAM,SAAAC,GACLtB,QAAQC,IAAI,gBAAiBqB,MAyBDzC,CAAiBD,EAAKiB,MAFzCoB,QAMb,uBAAMM,SA5DM,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjBzC,QAASqB,EACTZ,MAAM,IAAIiC,MAAOC,cACjB7C,UAAW8C,KAAKC,SAAW,IAI7BlB,EACUc,GACPlC,MAAK,SAAA4B,GACJf,EAASD,EAAM2B,OAAOX,IACtBb,EAAW,QA8Cb,UACE,uBACEyB,MAAO1B,EACP2B,SA5BiB,SAACC,GACxB3B,EAAW2B,EAAEC,OAAOH,UA6BhB,wBAAQI,KAAK,SAAb,0BCvFRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.fad99c44.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n    const label = note.important \n        ? \"make unimportant\" \n        : \"make important\"\n\n    return (\n        <li className=\"note\">\n            {note.content}   \n            <button onClick={toggleImportance}>{label}</button>\n        </li>\n    )\n};\n\nexport default Note","const Notify = ({message}) => {\n    if (message === null) {\n        return null\n    }\n\n    return (\n        <div className='error'>\n            {message}\n        </div>\n    )\n}\n\nexport default Notify","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request =  axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data);\n}\n\nconst update = (id, newObject) => {\n  const request =  axios.put(`${baseUrl}/${id}`, newObject)\n  console.log(request);\n  return request.then(response => response.data);\n}\n\nexport default { getAll, create, update }","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note'\nimport Notify from './components/Notify'\nimport noteServices from './services/notes'\n\nimport './index.css'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('a new note...');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null)\n  \n  // fetch notes from db.json server\n  useEffect(() => {\n      noteServices\n        .getAll()\n        .then( initialNote => {\n            setNotes(initialNote)\n        })\n  }, [])\n  //(console.log(\"render\", notes.length, \"notes\");\n\n\n  // add note to the db.json server\n  const addNote = (event) => {\n    event.preventDefault()\n\n    const noteObject = {\n      content: newNote,\n      data: new Date().toISOString(),\n      important: Math.random() < 0.5,\n     \n    }\n\n    noteServices\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n\n  }\n\n  const toggleImportance = id => {\n    const note = notes.find(note => note.id ===id);\n    const changeNote = {...note, important: !note.important }\n    //console.log(`it is note with id : ${id}`)\n    \n    noteServices\n        .update(id, changeNote)\n        .then (returnedNote => {\n          console.log(\"udpated\");\n          setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n        })\n        .catch(err => {\n          console.log(\"error occured\", err);\n        })\n  }\n\n  const handleNoteChange = (e) => {\n    setNewNote(e.target.value)\n  }\n\n  const notesToShow = showAll \n        ? notes\n        : notes.filter(note => note.important === true)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notify message={errorMessage} />\n      <button onClick={() => setShowAll(!showAll)}>\n        show {showAll ? 'important': 'all'}\n      </button>\n      \n      <ul>\n        {notesToShow.map((note, i) => \n          <Note \n              key={i}\n              note={note}\n              toggleImportance={() => toggleImportance(note.id)}\n              />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n          />\n        <button type=\"submit\">save</button>\n      </form>   \n    </div>\n  )\n}\n\n  export default App","import ReacrDOM from 'react-dom'\nimport App from './App'\n\nReacrDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}